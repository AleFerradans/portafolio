<section class="mt-8 md:mt-10">

    
    <article class="scroller">

        <div class="scroller__inner">
            <img src="./html5.svg" alt="html">
            <img src="css3.svg" alt="css">
            <img src="js.svg" alt="javascript">
            <img src="reactjs.svg" alt="react">
            <img src="astro.svg" alt="astro">
            <img src="git.svg" alt="git">
            <img src="tailwindcss.svg" alt="tailwind">
            <img src="sass.svg" alt="sass">
            <img src="mysql.svg" alt="mysql">
            <img src="figma.svg" alt="figma">
            <img src="./html5.svg" alt="html">
            <img src="css3.svg" alt="css">
            <img src="js.svg" alt="javascript">
            <img src="reactjs.svg" alt="react">
            <img src="astro.svg" alt="astro">
            <img src="git.svg" alt="git">
            <img src="tailwindcss.svg" alt="tailwind">
            <img src="sass.svg" alt="sass">
            <img src="mysql.svg" alt="mysql">
            <img src="figma.svg" alt="figma">         
        </div>
        

        
    </article>

</section>

<style>
    .scroller{
        display: block;
        max-width: 400px;
        overflow: hidden;
        padding: 10px 0px;
    }

    .scroller__inner{
        display: flex;
        column-gap: 30px;
        flex-wrap: nowrap;
    }

    .scroller__inner img{
        height: 30px;

    }

    .scroller[data-animated="true"] {
        overflow: hidden;
        -webkit-mask: linear-gradient(90deg, transparent, #000, #000, transparent);

    }

    .scroller[data-animated="true"] .scroller__inner {
        width: fit-content;
        flex-wrap: nowrap;
        animation:  
        scroll 15s linear infinite;
    }


    @keyframes scroll {
        to{
            transform: translate(calc(-50% - 15px));
        }
    }

</style>

<script>
    const scrollers = document.querySelectorAll(".scroller");

    if(!window.matchMedia("(prefers-reduced-motion: reduce)").matches){
        addAnimation();
    }
    
    function addAnimation() {
        scrollers.forEach(scroller => {
            scroller.setAttribute("data-animated", true);

            const scrollerInner = scroller.querySelector('.scroller__inner');
            const scrollerContent = Array.from(scrollerInner.children);

            scrollerContent.forEach(item => {
                const duplicatedItem = item.cloneNode(true);
                duplicatedItem.setAttribute("aria-hidden", true);
                scrollerInner.appendChild(duplicatedItem);
            });
        });
    }
</script>